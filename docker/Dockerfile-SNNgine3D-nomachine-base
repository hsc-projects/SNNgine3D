# Sources:
# https://github.com/rewreu/nomachine
# https://github.com/iot-salzburg/gpu-jupyter
# https://stackoverflow.com/questions/53835198/integrating-python-poetry-with-docker/54763270#54763270


FROM  nvidia/cuda:11.6.2-devel-ubuntu20.04

# --------------------------------------
# ------------- Set labels -------------

# See https://github.com/opencontainers/image-spec/blob/master/annotations.md
LABEL name="snngine3d-nomachine-base"
LABEL version="0.0.0"
LABEL vendor="hsc-projects"
LABEL org.opencontainers.image.title="snngine3d-nomachine-base"
LABEL org.opencontainers.image.version="0.0.0"
LABEL org.opencontainers.image.url="https://github.com/hsc-projects/snngine3d"
LABEL org.opencontainers.image.documentation="https://github.com/hsc-projects/snngine3d"
LABEL authors="hsc-projects <hsc-projects@protonmail.com>"
LABEL maintainer="hsc-projects <hsc-projects@protonmail.com>"

# Configure user
ARG user=snn
ARG passwd=snn
ARG uid=1000
ARG gid=100
ARG tz=Europe/Amsterdam
#ARG SNNGINE3D_INSTALL_OPTIONS="--without dev"

ENV USER    $user
ENV PASSWD  $passwd
ENV UID     $uid
ENV GID     $gid

ENV TZ=$tz
ENV DEBIAN_FRONTEND         noninteractive
ENV DBUS_SYSTEM_BUS_ADDRESS "nix:path=/host/run/dbus/system_bus_socket"
ENV PATH                    "/opt/conda/bin:${PATH}"
ENV XDG_CACHE_HOME          "/home/${USER}/.cache/"

# Check https://www.nomachine.com/download/download&id=10 and change for the latest NOMACHINE_PACKAGE_NAME and MD5 shown in that link to get the latest version.
ENV NOMACHINE_PACKAGE_NAME  nomachine_8.3.1_1_amd64.deb
ENV NOMACHINE_BUILD         8.3

ENV CONDA_DIR               "/opt/conda"
#ENV PYTHONFAULTHANDLER              1
#ENV PYTHONUNBUFFERED                1
#ENV PYTHONHASHSEED                  random
#ENV PIP_NO_CACHE_DIR                off
#ENV PIP_DISABLE_PIP_VERSION_CHECK   on
#ENV PIP_DEFAULT_TIMEOUT             120
#
#ENV PYTHON_VERSION  3.10
#ENV POETRY_VERSION  1.3.2
#ENV PYCUDA_VERSION  v2022.2
#ENV TORCH_VERSION   1.13.1
#
#ENV SNNGINE3D_DIR    "/opt/snngine3d"

COPY /docker/fix-permissions /usr/local/bin/fix-permissions
COPY /docker/nxserver /usr/local/bin/

RUN chmod 1777 /tmp && chmod 1777 /var/tmp && \
    echo 'eval "$(command conda shell.bash hook 2> /dev/null)"' >> /etc/skel/.bashrc && \
    sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc && \
    #    groupadd $USER && \
    useradd -l -m -s /bin/bash -N -u $UID $USER && \
    usermod -aG sudo $USER && \
    echo "$PASSWD:$PASSWD" | chpasswd && \
    echo "root:${PASSWD}" | chpasswd && \
    chsh -s /bin/bash $USER && \
    rm -rf /etc/apt/sources.list.d/* && \
    apt-get update  && \
    apt-get upgrade -y && \
    apt-get install -y apt-utils sudo locales && \
    sudo echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&  \
    locale-gen en_US.UTF-8 && locale-gen en_US && sudo update-locale LC_ALL="en_US.UTF-8" && \
    apt-get install -y  \
      bash-completion  \
      ca-certificates \
      curl  \
      chromium-browser \
      cmake  \
      # for matplotlib anim
      ffmpeg \
      firefox \
      iputils-ping \
      gedit  \
      git  \
      graphviz libgraphviz-dev \
      libgl-dev \
      libncurses5-dev libncursesw5-dev \
      nano  \
      mesa-utils  \
      net-tools  \
      openssh-server  \
      software-properties-common  \
      pulseaudio \
      vim  \
      wget \
      # for pycuda build dependencies
      build-essential libudev-dev libdrm-dev libsystemd-dev pkg-config && \
    # desktop
    mkdir /var/run/sshd &&  \
    sed -i 's/#*PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config && \
    sed -i 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' /etc/pam.d/sshd && \
    # part of the nomachine installation
    mkdir -p /var/run/dbus && \
    apt-get install -y xfce4 xfce4-terminal xfce4-power-manager xfce4-screensaver && \
    rm -rf /var/lib/apt/lists/* && \
    curl -fSL "http://download.nomachine.com/download/${NOMACHINE_BUILD}/Linux/${NOMACHINE_PACKAGE_NAME}" -o nomachine.deb&&\
    dpkg -i nomachine.deb &&\
    sed -i "s|#EnableClipboard both|EnableClipboard both |g" /usr/NX/etc/server.cfg && \
    sed -i '/DefaultDesktopCommand/c\DefaultDesktopCommand "/usr/bin/startxfce4"' /usr/NX/etc/node.cfg && \
    # update user directory
    xdg-user-dirs-update --force && \
    # removed from the jupyter template: "echo "auth requisite pam_deny.so" >> /etc/pam.d/su"
    sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers && \
    sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers && \
    mkdir -p "${CONDA_DIR}" && \
    chown "${USER}:${GID}" "${CONDA_DIR}" && \
    chmod g+w /etc/passwd && \
    echo 'export PATH=/usr/local/cuda/bin:/opt/conda/bin:${PATH}' >> "/home/${USER}/.bashrc" && \
    mkdir "/home/${USER}/tmp"  && \
    chmod +x /usr/local/bin/nxserver && \
    chmod +x /usr/local/bin/fix-permissions && \
    fix-permissions "/home/${USER}"

# Run it
EXPOSE 22 4000
ENTRYPOINT ["nxserver"]

# docker run -d -p 4000:4000 --name nomachine-base0 --cap-add=SYS_PTRACE snngine3d-nomachine-base
